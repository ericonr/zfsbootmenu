.\" Automatically generated by Pod::Man 4.11 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "zfsbootmenu 7"
.TH zfsbootmenu 7 "2020-08-18" "1.4rc1" "ZFSBootMenu"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
.RS 2
zfsbootmenu \- System integrations
.RE
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.RS 2
ZFSBootMenu behavior is controlled through kernel command line options and \s-1ZFS\s0 filesystem properties.
.RE
.SH "CLI Parameters"
.IX Header "CLI Parameters"
.RS 4
These options are set on the kernel command line when booting the initramfs or \s-1UEFI\s0 bundle. Default options were carefully chosen so that a system can be booted without setting any values.
.RE
.IP "\fBspl_hostid=\fR" 4
.IX Item "spl_hostid="
When creating an initramfs or \s-1UEFI\s0 bundle, the \fIhostid\fR from the system is copied into the target. If this image will be used on another system with a different \fIhostid\fR, it can be overridden with this option.
.IP "\fBforce_import=0|1\fR" 4
.IX Item "force_import=0|1"
Set this option to \fI1\fR to attempt to force a pool import on the system. This enables \fI\-f\fR on the \fIzpool import\fR command, which will attempt to import a pool that's potentially in use on another system. Use this option with caution!
.IP "\fBtimeout=\fR" 4
.IX Item "timeout="
This option controls if the boot environment menu should be displayed.
.RS 4
.IP "\fB0\fR" 2
.IX Item "0"
Set this to bypass the menu and immediately boot the configured \fIbootfs\fR pool property.
.IP "\fB\-1\fR" 2
.IX Item "-1"
Set this to always display the boot environment menu.
.IP "\fBPositive integer\fR" 2
.IX Item "Positive integer"
Set any positive integer to display a countdown timer before booting the configured \fIbootfs\fR boot environment.
.RE
.RS 4
.RE
.IP "\fBzfsbootmenu:POOL=\fR" 4
.IX Item "zfsbootmenu:POOL="
The boot menu module will automatically start if it's included in an initramfs. However, if your system has multiple \s-1ZFS\s0 pools, you can set one as a primary pool. This is set via \fIzfsbootmenu:POOL=\fR\fBpool\fR
.SH "ZFS Properties"
.IX Header "ZFS Properties"
.RS 4
The following properties can be set at any level of the pool to control boot behavior.
.RE
.IP "\fBorg.zfsbootmenu:kernel\fR" 4
.IX Item "org.zfsbootmenu:kernel"
This can be a partial kernel name (\fI5.4\fR) or a full filename (\fIvmlinuz\-5.7.11_1\fR).
.IP "\fBorg.zfsbootmenu.commandline\fR" 4
.IX Item "org.zfsbootmenu.commandline"
Set the list of kernel commandline options to be passed to the final \s-1OS.\s0 Do not set \fIroot=\fR, this is set for you.
.IP "\fBorg.zfsbootmenu:active\fR" 4
.IX Item "org.zfsbootmenu:active"
This controls whether boot environments appear in or are hidden from ZFSBootMenu.
.RS 4
.IP "\fBoff\fR" 2
.IX Item "off"
Set to \fBoff\fR on a boot environment with \fImountpoint=/\fR to \fB\s-1HIDE\s0\fR the environment.
.IP "\fBon\fR" 2
.IX Item "on"
Set to \fBon\fR for a boot environment with \fImountpoint=legacy\fR to \fB\s-1SHOW\s0\fR the environment. By default ZFSBootMenu only presents boot environments that have \fImountpoint=/\fR set. Note that not all Linux distributions support booting from filesystems with \fImountpoint=legacy\fR.
.RE
.RS 4
.RE
.IP "\fBorg.zfsbootmenu:rootprefix\fR" 4
.IX Item "org.zfsbootmenu:rootprefix"
This controls the prefix added to the \s-1ZFS\s0 filesystem provided as the root to the kernel booted by ZFSBootMenu. For example, the command-line argument \fIroot=zfs:zroot/ROOT/void\fR has the root prefix \fIroot=zfs:\fR, which is the default value unless the boot environment appears to be \fIArch Linux\fR; for arch, the default root prefix is \fIzfs=\fR. Set this property to override the value determined from inspecting the boot environment.
.SH "AUTHOR"
.IX Header "AUTHOR"
ZFSBootMenu Team
